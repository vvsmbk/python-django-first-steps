# Области видимости переменных. Ключевые слова global и nonlocal
N = 100
WIDTH, HEIGHT = 1000, 500

print(N)

def my_func(lst):
    global N        # начинаем работать с глобальной переменной
    N = 20
    for x in lst:
        n = x + 1 + N
        print(n)


my_func([1, 2, 3])
print(N)

x = 0
# global - чтобы менять глобальные переменные в локальном окружении
#          (например, внутри функций)
# nonlocal - чтобы из одной локальной области обращаться
#            к локальной переменной из внешней локальной области

def outer():
    global x # теперь мы работает с иксом и тут, и уровнем ниже. нонлокан не нужен
    # nonlocal x # здесь не сработает, потому что выше этого уровня - глобальный
    x = 1
    def inner():
        # nonlocal x  # теперь икс в области видимости выше своего
        x = 2
        print("inner: ", x)

    inner()
    print("outer: ", x)

outer()
print("global: ", x)

####################################

# Имеется программа (см. листинг ниже), где читается глобальная переменная WIDTH
# (из входного потока) и функция с именем func1. Допишите в теле функции команду,
# которая бы позволяла изменять глобальную переменную WIDTH.
# WIDTH = int(input())
#
#
# def func1():
#     global WIDTH
#     WIDTH += 1
#     return WIDTH
#
#
# print(func1())

# Имеется программа (см. листинг ниже). Необходимо в теле функции func2 дописать
# команду, которая бы меняла значение уже существующей переменной msg,
# объявленной в функции func1.
# def func1():
#     msg = input()
#
#
#     def func2():
#         nonlocal msg
#         msg = input()
#         print(msg)
#
#
#     func2()
#     print(msg)
#
#
# func1()

# Объявите функцию с именем create_global, которая имеет, следующую сигнатуру:
# def create_global(x): ...
# Эта функция должна создавать глобальную переменную с именем TOTAL и присваивать
# ей значение x. (Ничего выводить на экран она не должна, только создавать
# переменную). Вызывать функцию не нужно, только определить.
# def create_global(x):
#     global TOTAL
#     TOTAL = x
