# tuples and it's methods
# кортеж - упорядоченная, но неизменяемая коллекция (похожа на списки)
a = 1, 2  # коллекция подразумевается как кортеж
a = (1, 2)  # можно и так
print(a)
b = (1,)  # создание кортежа из одного значения
b = 1,  # или так
print(b)
x, y = a  # кортеж можно так распаковать
print(x, y)
print(len(a))  # количество элементов в кортеже
print(a[0])  # обращаемся к элементу
print(a[0:1])  # срезы тоже работают
lst = [1, 2, 3]
a = (1, 2, 3)
print(lst.__sizeof__(), a.__sizeof__())  # кортежи занимают меньше памяти (в байтах)
a = ()  # а ссылается на пустой кортеж
b = tuple()  # то же самое, что и ()
a = (2,)
a = a + (1,)  # объединение кортежей
print(a)
a += ((1, 2, 3),)  # вложенный кортеж
print(a)
b = (1,) * 10  # дублирование значений
print(b)
a = tuple("hello world")
print(a)
t = list(a)
print(t)
print(a.count('l'))  # возвращает число найденных элементов с указанным значением
print(a.index('l'))  # возвращает index первого найденного элемента

###################################################
# Имеется кортеж:
# t = (3.4, -56.7)
# Вводится последовательность целых чисел в одну строчку через пробел. Необходимо
# их добавить в кортеж t. Результат вывести на экран командой:
# print(t)
# t1 = map(int, input().split())
# t = t + tuple(t1)
# print(t)

# Вводятся названия городов в одну строку через пробел. На их основе формируется
# кортеж. Если в этом кортеже нет города "Москва", то следует его добавить в
# конец кортежа. Результат вывести на экран в виде строки с названиями городов
# через пробел.
# t = tuple(input().split())
# if t.count("Москва") == 0:
#     t += ("Москва",)
# print(*t)

# Вводятся названия городов в одну строку через пробел. На их основе формируется
# кортеж. Если в этом кортеже присутствует город "Ульяновск", то этот элемент
# следует удалить (создав новый кортеж). Результат вывести на экран в виде строки
# с названиями городов через пробел.
# t = tuple(input().split())
# if t.count("Ульяновск") != 0:
#     t1 = t[:t.index("Ульяновск")]
#     if len(t) > t.index("Ульяновск"):
#         t2 = t[t.index("Ульяновск")+1:]
#         t = t1 + t2
#         print(*t)
#     else:
#         print(*t1)
# else:
#     print(*t)

# Вводятся имена студентов в одну строчку через пробел. На их основе формируется
# кортеж. Отобразите на экране все имена из этого кортежа, которые содержат
# фрагмент "ва" (без учета регистра). Имена выводятся в одну строчку через пробел
# в нижнем регистре (малыми буквами).
# t = tuple(input().split())
# res = ()
# for el in t:
#     el = el.lower()
#     if el.count("ва") != 0:
#         res += (el,)
# print(*res)

# Вводятся целые числа в одну строку через пробел. На их основе формируется
# кортеж. Необходимо создать еще один кортеж с уникальными (не повторяющимися)
# значениями из первого кортежа. Результат отобразите в виде списка чисел через
# пробел.
# t = tuple(map(int, input().split()))
# res = ()
# for el in t:
#     if res.count(el) == 0:
#         res += (el,)
# print(*res)

# Вводятся целые числа в одну строку через пробел. На их основе формируется
# кортеж. Необходимо найти и вывести все индексы неуникальных (повторяющихся)
# значений в этом кортеже. Результат отобразите в виде строки чисел, записанных
# через пробел.
# t = tuple(map(int, input().split()))
# res = ()
# for el in enumerate(t):
#     if t.count(el[1]) > 1:
#         res += (el[0],)
# print(*res)

# Имеется двумерный кортеж, размером 5 x 5 элементов:
# t = ((1, 0, 0, 0, 0),
#      (0, 1, 0, 0, 0),
#      (0, 0, 1, 0, 0),
#      (0, 0, 0, 1, 0),
#      (0, 0, 0, 0, 1))
# Вводится натуральное число N (N < 5). Необходимо на основе кортежа t
# сформировать новый аналогичный кортеж t2 размером N x N элементов.
# Результат вывести на экран в виде таблицы чисел.
# n = int(input())
# t2 = ((row[i] for row in t[:len(t)-n+1]) for i in range(n))
# for row in t2:
#     print(*row)
