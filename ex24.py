# set and its metods
# Множество - неупорядоченная коллекция уникальных данных
a = {1, 2, 3, "hello"}  # инициализация множества
print(a, type(a))
q = {1, 2, 3, "hello", 2, 3, 1, 4, 2}  # только уникальные сохранятся
# ТОЛЬКО НЕИЗМЕНЯЕМЫЕ ТИПЫ: числа, булевые значения, строки и кортежи могут быть
# в множествах
print(q)
a = set()  # пустое множество
print(set("abrakadabra"))  # неупорядоченные, но уникальные элементы.
# По индексу обратиться нельзя
for c in q:
    print(c)
print(len(q), 1 in q)

b = set()
b.add(7)
print(b)
b.add(3)
print(b)
b.update(["a", "b", (1,2)])
print(b)
b.remove((1,2))  # удаляе элемент. Если его нет, то вернет ошибку.
# discard() не возвращает ошибку при удалении
print(b)
b.pop()  # удаляет произвольный элемент из множества и возвращает его. Иначе ошибка
b.clear()  # очистить множество

################################################################
# Вводятся вещественные числа в одну строчку через пробел.
# Необходимо на их основе сформировать множество s.
#Вывести на экран значения множества s в порядке возрастания в одну
# строчку через пробел
# s = set(map(float, input().split()))
# print(*sorted(s))

#Вводится текст в одну строку, слова разделены пробелом. Необходимо подсчитать
# число уникальных слов (без учета регистра) в этом тексте. Результат (число
# уникальных слов) вывести на экран.
# s = list(input().split())
# ss = set()
# for x in s:
#     ss.add(x.lower())
# print(len(ss))

#Вводится строка, содержащая латинские символы, пробелы и цифры. Необходимо
# выделить из нее все неповторяющиеся цифры (символы от 0 до 9) и вывести на
# экран в одну строку через пробел их в порядке возрастания значений. Если
# цифры отсутствуют, то вывести слово НЕТ.
# a = input()
# s = set()
# for i in a:
#     if i.isdigit() == True:
#         s.add(i)
# if len(s) > 0:
#     print(*sorted(s))
# else:
#     print("НЕТ")

#В ночном клубе фиксируется список гостей. Причем гости могут выходить из
# помещения, а затем, снова заходить. Тогда их имена фиксируются повторно.
# На вход программы поступает такой список (каждое имя записано с новой строки).
# Требуется подсчитать общее число гостей, которые посетили ночной клуб.
# Полагается, что гости имеют уникальные имена. На экран вывести общее число
# гостей клуба.
# s = {"Мария", "Елена", "Екатерина", "Александр", "Елена", "Мария"}
# print(len(s))

#В аккаунте youtube Сергея прокомментировали очередное видео. Некоторые
# посетители оставляли несколько комментариев. Требуется по списку комментариев
# определить уникальное число комментаторов. Комментарии поступают на вход
# программы в формате: имя N: комментарий N
#Также полагается, что имена у разных комментаторов не совпадают. Вывести на
# экран общее число уникальных комментаторов.
# lst_in = ["EvgeniyK: спасибо большое!",
#           "LinaTroshka: лайк и подписка!",
#           "Sergey Karandeev: крутое видео!",
#           "Евгений Соснин: обожаю",
#           "EvgeniyK: это повтор?",
#           "Sergey Karandeev: нет, это новое видео"]
# lst_in = [list(lst_in[i].split(": ")) for i in range(len(lst_in))]
# d = dict(lst_in)
# s = set()
# for i in d.keys():
#     s.add(i)
# print(len(s))

# Пользователь с клавиатуры вводит названия городов, пока не введет букву q.
# Определить общее уникальное число городов, которые вводил пользователь. На
# экран вывести это число. Из коллекций при реализации программы использовать
# только множества.
# s = set()
# i = ""
# while i != "q":
#     i = input()
#     if i == 'q':
#         break
#     s.add(i)
# print(len(s))