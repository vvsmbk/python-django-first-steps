# Аргумент key для сортировки коллекций по ключу
a = [4, 3, -10, 1, 7, 12]
b = sorted(a)
print(b)


# определим для чётных значений 0, а для нечетных - 1
def is_odd(x):
    return x % 2


b = sorted(a, key=is_odd)
print(b)
# или сразу:
b = sorted(a, key=lambda x: x % 2)
print(b)


# теперь будем для четных значений будем
# дополнительно добавлять само значение, а для нечетных еще
# и 100
def key_sort(x):
    return x if x % 2 == 0 else 100 + x


b = sorted(a, key=key_sort)
print(b)

lst = ["Kyiv", "Lviv", "Odesa", "Kharkiv", "Dnipro"]
b = sorted(lst, key=len)
print(b)

b = sorted(lst, key=lambda x: x[0])
print(b)

books = (
    ("a", 200),
    ("b", 100),
    ("c", 150),
    ("d", 50)
)
b = sorted(books, key=lambda x: x[-1])
print(b)

################################################

# На вход программы поступает список наименований рек,
# записанных в одну строчку через пробел. Необходимо
# отсортировать этот список в порядке убывания длин названий.
# Результат вывести в одну строчку через пробел.

s = "Лена Енисей Волга Дон".split()
b = sorted(s, key=len, reverse=True)
print(*b)

# На вход программы поступает строка в формате:
# предмет_1=вес_1
# ...
# предмет_N=вес_N
# Веса предметов заданы целыми числами. Необходимо на основе
# этих данных сформировать словарь и, затем, на основе этого
# словаря сформировать список предметов по убыванию их веса.
# (В списке должны находиться только наименования предметов
# без их весов).
# Отобразить полученный результат в виде строки с названиями
# через пробел.
# P. S. Для считывания списка целиком в программе уже записаны
# начальные строчки.
lst_in = [
    "ножницы=100",
    "котелок=500",
    "спички=20",
    "зажигалка=40",
    "зеркальце=50",
]
d = {s.split('=')[0]: int(s.split('=')[1]) for s in lst_in}
res = sorted(d.items(), key=lambda x: x[-1], reverse=True)
for i in res:
    print(i[0], end=' ')

# Известно, что порядок нот, следующий: до, ре, ми, фа, соль,
# ля, си. На вход программы поступает строка с набором этих
# нот, записанных через пробел. Необходимо сформировать список
# из входной строки с нотами, отсортированными указанным
# образом. Результат вывести в виде строки из нот, записанными
# через пробел.
# noty = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']
# lst = input().split()
# lst = sorted(lst, key= lambda x: noty.index(x))
# print(*lst)

#
lst_in = ['Атос=лейтенант', 'Портос=прапорщик', "д'Артаньян=капитан",
          'Арамис=лейтенант', 'Балакирев=рядовой']
rank = ['рядовой', 'сержант', 'старшина', 'прапорщик', 'лейтенант',
        'капитан', 'майор', 'подполковник', 'полковник']
lst = [[s.split('=')[0],s.split('=')[1]] for s in lst_in]
lst.sort(key=lambda x: rank.index(x[-1]))
